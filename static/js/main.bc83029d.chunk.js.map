{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","className","styles","list","item","FeedbackOptions","options","onClickFeedback","map","option","type","style","button","onClick","Section","title","children","section","Notification","message","App","state","addFeedback","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,6JCwBbC,MAtBf,YAAgF,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,2BAC/C,OACE,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,qBAAIF,UAAWC,IAAOE,KAAtB,mBAAmCR,KACnC,qBAAIK,UAAWC,IAAOE,KAAtB,sBAAsCP,KACtC,qBAAII,UAAWC,IAAOE,KAAtB,kBAAkCN,KAClC,qBAAIG,UAAWC,IAAOE,KAAtB,oBAAoCL,KACpC,qBAAIE,UAAWC,IAAOE,KAAtB,gCACsBJ,EADtB,W,gBCWSK,MAlBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBACEC,KAAK,SACLT,UAAWU,IAAMC,OAEjBC,QAAS,kBAAMN,EAAgBE,IAJjC,SAMGA,GAHIA,O,gBCSIK,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASf,UAAWC,IAAOe,QAA3B,UACE,oBAAIhB,UAAWC,IAAOa,MAAtB,SAA8BA,IAC7BC,M,iBCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGlB,UAAWU,IAAMQ,QAApB,SAA8BA,KCoDxBC,E,4MAjDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,YAAc,SAACb,GACb,EAAKc,UAAS,SAACF,GAAD,sBACXZ,EAASY,EAAMZ,GAAU,O,EAI9Be,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKnB,GAAN,OAAiBmB,EAAMnB,IAAQ,I,EAGzEoB,gCAAkC,WAAO,IAC/BjC,EAAS,EAAKyB,MAAdzB,KACR,OAAOkC,KAAKC,MAAOnC,EAAO,EAAK4B,qBAAwB,MAAQ,G,4CAGjE,WAAU,IAAD,EACwBQ,KAAKX,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASmB,OAAOQ,KAAKD,KAAKX,OAC1Bd,gBAAiByB,KAAKV,gBAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGiB,KAAKR,qBACJ,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKR,qBACZxB,2BAA4BgC,KAAKH,oCAGnC,cAAC,EAAD,CAAcV,QAAQ,+B,GA1ChBe,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc83029d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__qMAXH\",\"item\":\"Statistics_item__Q7y24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3SuTK\",\"title\":\"Section_title__2GKUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2yqu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1Iri3\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positiveFeedbackPercentage }) {\n  return (\n    <ul className={styles.list}>\n      <li className={styles.item}>Good: {good}</li>\n      <li className={styles.item}>Neutral: {neutral}</li>\n      <li className={styles.item}>Bad: {bad}</li>\n      <li className={styles.item}>Total: {total}</li>\n      <li className={styles.item}>\n        Positive feedback: {positiveFeedbackPercentage}%\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport style from \"./FeedbackOptions.module.css\";\n\nfunction FeedbackOptions({ options, onClickFeedback }) {\n  return options.map((option) => (\n    <button\n      type=\"button\"\n      className={style.button}\n      key={option}\n      onClick={() => onClickFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nfunction Notification({ message }) {\n  return <p className={style.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = (option) => {\n    this.setState((state) => ({\n      [option]: state[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onClickFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}